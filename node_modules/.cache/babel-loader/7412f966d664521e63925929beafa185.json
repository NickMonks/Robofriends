{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicot\\\\Robofriends\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, \" RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // CONNECT is a HOF, which means that takes as an input a function\n// and provides as an output another function. We add two functions that are standard in the Redux industry\n// but could be named anything we want","map":{"version":3,"sources":["C:/Users/nicot/Robofriends/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","requestRobots","connect","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","constructor","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,WAAP;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENE,IAAAA,MAAM,EAAEH,KAAK,CAACH,aAAN,CAAoBM,MAFtB;AAGNC,IAAAA,SAAS,EAAEJ,KAAK,CAACH,aAAN,CAAoBO,SAHzB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACH,aAAN,CAAoBQ;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACX,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD7B;AAENC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACV,aAAa,EAAd;AAFzB,GAAP;AAIA,CALD;;AAOA,MAAMgB,GAAN,SAAkBvB,KAAK,CAACC,SAAxB,CAAiC;AAChCuB,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKd,KAAL,GAAa;AACZG,MAAAA,MAAM,EAAG;AADG,KAAb;AAGA;;AAEDY,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWJ,eAAX;AACA;;AAGDK,EAAAA,MAAM,GAAG;AACR,UAAM;AAACd,MAAAA;AAAD,QAAY,KAAKH,KAAvB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcO,MAAAA;AAAd,QAAgC,KAAKQ,KAA3C;AACA,UAAME,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAK,IAAI;AACzC,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCtB,WAAW,CAACqB,WAAZ,EAAlC,CAAP;AACD,KAFmB,CAAvB;AAIA,WAAO,CAACnB,MAAM,CAACqB,MAAR,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADM,gBAGJ;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEhB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEU,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAHD,CAHH;AAaG;;AAjC4B;;AAmCjC,eAAepB,OAAO,CAACC,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf,C,CACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css';\r\nimport { setSearchField, requestRobots } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n \r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots()\t)\r\n\t}\r\n}\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots : []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst {robots } = this.state;\r\n\t\tconst {searchField, onSearchChange} = this.props;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n      \treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    \t})\r\n\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading</h1> :\r\n\t\t\t\t\t(\r\n\t\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<h1 className='f1'> RoboFriends</h1>\r\n\t\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\t\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n// CONNECT is a HOF, which means that takes as an input a function\r\n// and provides as an output another function. We add two functions that are standard in the Redux industry\r\n// but could be named anything we want"]},"metadata":{},"sourceType":"module"}