{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicot\\\\Robofriends\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\nimport { setSearchField } from '../actions';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }\n    }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, \" RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // CONNECT is a HOF, which means that takes as an input a function\n// and provides as an output another function. We add two functions that are standard in the Redux industry\n// but could be named anything we want","map":{"version":3,"sources":["C:/Users/nicot/Robofriends/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","ErrorBoundary","setSearchField","connect","mapStateToProps","state","searchField","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","robots","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADb,GAAP;AAGA,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AAACC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAApC,GAAP;AACA,CAFD;;AAIA,MAAMC,GAAN,SAAkBjB,KAAK,CAACC,SAAxB,CAAiC;AAChCiB,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKT,KAAL,GAAa;AACZU,MAAAA,MAAM,EAAG;AADG,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAE;AAElBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACP,MAAAA,MAAM,EAAEM;AAAT,KAAd,CAFf;AAGA;;AAGDE,EAAAA,MAAM,GAAG;AACR,UAAM;AAACR,MAAAA;AAAD,QAAY,KAAKV,KAAvB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcG,MAAAA;AAAd,QAAgC,KAAKe,KAA3C;AACA,UAAMC,cAAc,GAAGV,MAAM,CAACW,MAAP,CAAcC,KAAK,IAAI;AAC9C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCxB,WAAW,CAACuB,WAAZ,EAAlC,CAAP;AACC,KAFsB,CAAvB;AAIA,WAAO,CAACd,MAAM,CAACgB,MAAR,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADM,gBAGJ;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKtB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAHD,CAHH;AAaG;;AApC4B;;AAsCjC,eAAetB,OAAO,CAACC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf,C,CACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css';\r\nimport { setSearchField } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n \r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsearchField: state.searchField\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {onSearchChange: (event) => dispatch(setSearchField(event.target.value))}\r\n}\r\n\r\nclass App extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots : []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({robots: users}));\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst {robots } = this.state;\r\n\t\tconst {searchField, onSearchChange} = this.props;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t\t})\r\n\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading</h1> :\r\n\t\t\t\t\t(\r\n\t\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t\t<h1 className='f1'> RoboFriends</h1>\r\n\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\t\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n// CONNECT is a HOF, which means that takes as an input a function\r\n// and provides as an output another function. We add two functions that are standard in the Redux industry\r\n// but could be named anything we want"]},"metadata":{},"sourceType":"module"}